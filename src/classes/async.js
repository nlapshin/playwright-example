// Асинхронное выполнение.

// Пример асинхронного действия.
// 1. Отправка письма.
// Мы запускаем действие
// Не ждем выполнения сразу(уходим делать другие дела)
// Когда действие завершается нас оповещают об этом.

// Запрос к серверу. Это сихронный или асинхронный?
// 10 если водите машину.
// 
// У Javascript есть очередь задач.
// И он их вылолянет.
// Отправляет запрос и уходит другие задачи делать.
// Приходит ответ от сервера и это новая задача, обработать ответ.
// Event loop.

// Пример:
// Запросы(HTTP Requests)
// Таймер - выполни задачу через 10 секунд или выполняй задачу каждые
// десять секунд.

// async - это для функций при объявлении, чтобы подсказать js, что функция
// асинхронная
// await - это когда мы вызываем другие асинхроные функции.
async function getGoogle() {
  const res = await fetch('https://google.ru'); // await она будет асинхронной.
  const data = await res.json();
  
  return data;
}

// Синтаксическая абстрация

// Ожидание - pending
// Операция завершилась успешно - resolve(success)
// Операция завершилась неудачей - reject(failure)
let promise = new Promise((resolve, reject) => {
  setTimeout(() => {
    resolve("result");
  }, 1000);
});

// Она выведет в результе result
async function callPromise() {
  const res = await promise

  console.log(res);
}

callPromise();

// POM
